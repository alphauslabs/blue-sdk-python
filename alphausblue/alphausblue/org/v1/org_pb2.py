# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: org/v1/org.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from alphausblue.api.ripple import org_pb2 as api_dot_ripple_dot_org__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='org/v1/org.proto',
  package='blueapi.org.v1',
  syntax='proto3',
  serialized_options=b'\n\025cloud.alphaus.api.orgB\010OrgProtoZ\"github.com/alphauslabs/blueapi/org\222A\343\t\022\301\t\n\032Alphaus Blue API reference\022\203\010Alphaus provides an API for interacting with its services. Blue API is a RESTful API that can be accessed by an HTTP client such as `curl`, or any HTTP library which is part of most modern programming languages. This API reference is autogenerated from [protocol buffers](https://developers.google.com/protocol-buffers) defined in this [repository](https://github.com/alphauslabs/blueapi), together with our supported [client libraries](https://alphauslabs.github.io/blueapi/sdks/). See the official [documentation](https://alphauslabs.github.io/blueapi/) for more information.\n\nYou may encounter the following feature maturity indicators:\n- **(BETA)** - New or experimental features, subject to changes; and\n- **(Deprecated)** - Outdated or replaced features.\n\nSome endpoints, especially those that return lists of resources, have streaming responses; newline-separated stream of \342\200\234chunks\342\200\235. Each chunk is an envelope that can contain either a response message or an error. Only the last chunk will include an error, if any.\";\n\021Alphaus: Blue API\022&https://alphauslabs.github.io/blueapi/*W\n\033License: Apache License 2.0\0228https://github.com/alphauslabs/blueapi/blob/main/LICENSE2\007v0.beta\032\021api.alphaus.cloud\"\007/m/blue*\001\002',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10org/v1/org.proto\x12\x0e\x62lueapi.org.v1\x1a\x14\x61pi/ripple/org.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"H\n\x10\x43reateOrgRequest\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\"K\n\x11\x43reateOrgResponse\x12$\n\x03org\x18\x01 \x01(\x0b\x32\x17.blueapi.api.ripple.Org\x12\x10\n\x08password\x18\x02 \x01(\t\"\x19\n\x17SendVerificationRequest\"\x1f\n\x10VerifyOrgRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\"\x0f\n\rGetOrgRequest\"3\n\x15UpdateMetadataRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"A\n\x15UpdatePasswordRequest\x12\x13\n\x0boldPassword\x18\x01 \x01(\t\x12\x13\n\x0bnewPassword\x18\x02 \x01(\t\"\x12\n\x10\x44\x65leteOrgRequest2\xef\x06\n\x0cOrganization\x12\x64\n\tCreateOrg\x12 .blueapi.org.v1.CreateOrgRequest\x1a!.blueapi.org.v1.CreateOrgResponse\"\x12\x82\xd3\xe4\x93\x02\x0c\"\x07/org/v1:\x01*\x12v\n\x10SendVerification\x12\'.blueapi.org.v1.SendVerificationRequest\x1a\x17.blueapi.api.ripple.Org\" \x82\xd3\xe4\x93\x02\x1a\"\x18/org/v1:sendVerification\x12\x61\n\tVerifyOrg\x12 .blueapi.org.v1.VerifyOrgRequest\x1a\x17.blueapi.api.ripple.Org\"\x19\x82\xd3\xe4\x93\x02\x13\"\x0e/org/v1:verify:\x01*\x12Q\n\x06GetOrg\x12\x1d.blueapi.org.v1.GetOrgRequest\x1a\x17.blueapi.api.ripple.Org\"\x0f\x82\xd3\xe4\x93\x02\t\x12\x07/org/v1\x12m\n\x0eUpdateMetadata\x12%.blueapi.org.v1.UpdateMetadataRequest\x1a\x17.blueapi.api.ripple.Org\"\x1b\x82\xd3\xe4\x93\x02\x15\x1a\x10/org/v1/metadata:\x01*\x12k\n\x0eUpdatePassword\x12%.blueapi.org.v1.UpdatePasswordRequest\x1a\x17.blueapi.api.ripple.Org\"\x19\x82\xd3\xe4\x93\x02\x13\x1a\x0e/org/v1/passwd:\x01*\x12V\n\tDeleteOrg\x12 .blueapi.org.v1.DeleteOrgRequest\x1a\x16.google.protobuf.Empty\"\x0f\x82\xd3\xe4\x93\x02\t*\x07/org/v1\x1a\x96\x01\x92\x41\x92\x01\x12\x43(BETA) Organization API. Base URL: https://api.alphaus.cloud/m/blue\x1aK\n\x12Service definition\x12\x35https://github.com/alphauslabs/blueapi/tree/main/org/B\xac\n\n\x15\x63loud.alphaus.api.orgB\x08OrgProtoZ\"github.com/alphauslabs/blueapi/org\x92\x41\xe3\t\x12\xc1\t\n\x1a\x41lphaus Blue API reference\x12\x83\x08\x41lphaus provides an API for interacting with its services. Blue API is a RESTful API that can be accessed by an HTTP client such as `curl`, or any HTTP library which is part of most modern programming languages. This API reference is autogenerated from [protocol buffers](https://developers.google.com/protocol-buffers) defined in this [repository](https://github.com/alphauslabs/blueapi), together with our supported [client libraries](https://alphauslabs.github.io/blueapi/sdks/). See the official [documentation](https://alphauslabs.github.io/blueapi/) for more information.\n\nYou may encounter the following feature maturity indicators:\n- **(BETA)** - New or experimental features, subject to changes; and\n- **(Deprecated)** - Outdated or replaced features.\n\nSome endpoints, especially those that return lists of resources, have streaming responses; newline-separated stream of \xe2\x80\x9c\x63hunks\xe2\x80\x9d. Each chunk is an envelope that can contain either a response message or an error. Only the last chunk will include an error, if any.\";\n\x11\x41lphaus: Blue API\x12&https://alphauslabs.github.io/blueapi/*W\n\x1bLicense: Apache License 2.0\x12\x38https://github.com/alphauslabs/blueapi/blob/main/LICENSE2\x07v0.beta\x1a\x11\x61pi.alphaus.cloud\"\x07/m/blue*\x01\x02\x62\x06proto3'
  ,
  dependencies=[api_dot_ripple_dot_org__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,protoc__gen__openapiv2_dot_options_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])




_CREATEORGREQUEST = _descriptor.Descriptor(
  name='CreateOrgRequest',
  full_name='blueapi.org.v1.CreateOrgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='email', full_name='blueapi.org.v1.CreateOrgRequest.email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='blueapi.org.v1.CreateOrgRequest.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='password', full_name='blueapi.org.v1.CreateOrgRequest.password', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=237,
)


_CREATEORGRESPONSE = _descriptor.Descriptor(
  name='CreateOrgResponse',
  full_name='blueapi.org.v1.CreateOrgResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='org', full_name='blueapi.org.v1.CreateOrgResponse.org', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='password', full_name='blueapi.org.v1.CreateOrgResponse.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=314,
)


_SENDVERIFICATIONREQUEST = _descriptor.Descriptor(
  name='SendVerificationRequest',
  full_name='blueapi.org.v1.SendVerificationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=316,
  serialized_end=341,
)


_VERIFYORGREQUEST = _descriptor.Descriptor(
  name='VerifyOrgRequest',
  full_name='blueapi.org.v1.VerifyOrgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='blueapi.org.v1.VerifyOrgRequest.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=343,
  serialized_end=374,
)


_GETORGREQUEST = _descriptor.Descriptor(
  name='GetOrgRequest',
  full_name='blueapi.org.v1.GetOrgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=376,
  serialized_end=391,
)


_UPDATEMETADATAREQUEST = _descriptor.Descriptor(
  name='UpdateMetadataRequest',
  full_name='blueapi.org.v1.UpdateMetadataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='blueapi.org.v1.UpdateMetadataRequest.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='blueapi.org.v1.UpdateMetadataRequest.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=393,
  serialized_end=444,
)


_UPDATEPASSWORDREQUEST = _descriptor.Descriptor(
  name='UpdatePasswordRequest',
  full_name='blueapi.org.v1.UpdatePasswordRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='oldPassword', full_name='blueapi.org.v1.UpdatePasswordRequest.oldPassword', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='newPassword', full_name='blueapi.org.v1.UpdatePasswordRequest.newPassword', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=446,
  serialized_end=511,
)


_DELETEORGREQUEST = _descriptor.Descriptor(
  name='DeleteOrgRequest',
  full_name='blueapi.org.v1.DeleteOrgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=513,
  serialized_end=531,
)

_CREATEORGRESPONSE.fields_by_name['org'].message_type = api_dot_ripple_dot_org__pb2._ORG
DESCRIPTOR.message_types_by_name['CreateOrgRequest'] = _CREATEORGREQUEST
DESCRIPTOR.message_types_by_name['CreateOrgResponse'] = _CREATEORGRESPONSE
DESCRIPTOR.message_types_by_name['SendVerificationRequest'] = _SENDVERIFICATIONREQUEST
DESCRIPTOR.message_types_by_name['VerifyOrgRequest'] = _VERIFYORGREQUEST
DESCRIPTOR.message_types_by_name['GetOrgRequest'] = _GETORGREQUEST
DESCRIPTOR.message_types_by_name['UpdateMetadataRequest'] = _UPDATEMETADATAREQUEST
DESCRIPTOR.message_types_by_name['UpdatePasswordRequest'] = _UPDATEPASSWORDREQUEST
DESCRIPTOR.message_types_by_name['DeleteOrgRequest'] = _DELETEORGREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateOrgRequest = _reflection.GeneratedProtocolMessageType('CreateOrgRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEORGREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.CreateOrgRequest)
  })
_sym_db.RegisterMessage(CreateOrgRequest)

CreateOrgResponse = _reflection.GeneratedProtocolMessageType('CreateOrgResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEORGRESPONSE,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.CreateOrgResponse)
  })
_sym_db.RegisterMessage(CreateOrgResponse)

SendVerificationRequest = _reflection.GeneratedProtocolMessageType('SendVerificationRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENDVERIFICATIONREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.SendVerificationRequest)
  })
_sym_db.RegisterMessage(SendVerificationRequest)

VerifyOrgRequest = _reflection.GeneratedProtocolMessageType('VerifyOrgRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYORGREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.VerifyOrgRequest)
  })
_sym_db.RegisterMessage(VerifyOrgRequest)

GetOrgRequest = _reflection.GeneratedProtocolMessageType('GetOrgRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETORGREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.GetOrgRequest)
  })
_sym_db.RegisterMessage(GetOrgRequest)

UpdateMetadataRequest = _reflection.GeneratedProtocolMessageType('UpdateMetadataRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEMETADATAREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.UpdateMetadataRequest)
  })
_sym_db.RegisterMessage(UpdateMetadataRequest)

UpdatePasswordRequest = _reflection.GeneratedProtocolMessageType('UpdatePasswordRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPASSWORDREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.UpdatePasswordRequest)
  })
_sym_db.RegisterMessage(UpdatePasswordRequest)

DeleteOrgRequest = _reflection.GeneratedProtocolMessageType('DeleteOrgRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEORGREQUEST,
  '__module__' : 'org.v1.org_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.org.v1.DeleteOrgRequest)
  })
_sym_db.RegisterMessage(DeleteOrgRequest)


DESCRIPTOR._options = None

_ORGANIZATION = _descriptor.ServiceDescriptor(
  name='Organization',
  full_name='blueapi.org.v1.Organization',
  file=DESCRIPTOR,
  index=0,
  serialized_options=b'\222A\222\001\022C(BETA) Organization API. Base URL: https://api.alphaus.cloud/m/blue\032K\n\022Service definition\0225https://github.com/alphauslabs/blueapi/tree/main/org/',
  create_key=_descriptor._internal_create_key,
  serialized_start=534,
  serialized_end=1413,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateOrg',
    full_name='blueapi.org.v1.Organization.CreateOrg',
    index=0,
    containing_service=None,
    input_type=_CREATEORGREQUEST,
    output_type=_CREATEORGRESPONSE,
    serialized_options=b'\202\323\344\223\002\014\"\007/org/v1:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SendVerification',
    full_name='blueapi.org.v1.Organization.SendVerification',
    index=1,
    containing_service=None,
    input_type=_SENDVERIFICATIONREQUEST,
    output_type=api_dot_ripple_dot_org__pb2._ORG,
    serialized_options=b'\202\323\344\223\002\032\"\030/org/v1:sendVerification',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='VerifyOrg',
    full_name='blueapi.org.v1.Organization.VerifyOrg',
    index=2,
    containing_service=None,
    input_type=_VERIFYORGREQUEST,
    output_type=api_dot_ripple_dot_org__pb2._ORG,
    serialized_options=b'\202\323\344\223\002\023\"\016/org/v1:verify:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetOrg',
    full_name='blueapi.org.v1.Organization.GetOrg',
    index=3,
    containing_service=None,
    input_type=_GETORGREQUEST,
    output_type=api_dot_ripple_dot_org__pb2._ORG,
    serialized_options=b'\202\323\344\223\002\t\022\007/org/v1',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateMetadata',
    full_name='blueapi.org.v1.Organization.UpdateMetadata',
    index=4,
    containing_service=None,
    input_type=_UPDATEMETADATAREQUEST,
    output_type=api_dot_ripple_dot_org__pb2._ORG,
    serialized_options=b'\202\323\344\223\002\025\032\020/org/v1/metadata:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdatePassword',
    full_name='blueapi.org.v1.Organization.UpdatePassword',
    index=5,
    containing_service=None,
    input_type=_UPDATEPASSWORDREQUEST,
    output_type=api_dot_ripple_dot_org__pb2._ORG,
    serialized_options=b'\202\323\344\223\002\023\032\016/org/v1/passwd:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteOrg',
    full_name='blueapi.org.v1.Organization.DeleteOrg',
    index=6,
    containing_service=None,
    input_type=_DELETEORGREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=b'\202\323\344\223\002\t*\007/org/v1',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_ORGANIZATION)

DESCRIPTOR.services_by_name['Organization'] = _ORGANIZATION

# @@protoc_insertion_point(module_scope)
