# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/notification.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16\x61pi/notification.proto\x12\x0b\x62lueapi.api\"?\n\x14NotificationSettings\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x16\n\x0e\x64\x65\x66\x61ultChannel\x18\x02 \x01(\t\"\xd0\x01\n\x13NotificationChannel\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0c\n\x04type\x18\x04 \x01(\t\x12(\n\x05\x65mail\x18\x05 \x01(\x0b\x32\x19.blueapi.api.EmailChannel\x12(\n\x05slack\x18\x06 \x01(\x0b\x32\x19.blueapi.api.SlackChannel\x12,\n\x07msteams\x18\x07 \x01(\x0b\x32\x1b.blueapi.api.MSTeamsChannel\"2\n\x0c\x45mailChannel\x12\x0e\n\x06\x66ormat\x18\x01 \x01(\t\x12\x12\n\nrecipients\x18\x02 \x03(\t\"`\n\x0cSlackChannel\x12\x12\n\nwebhookUrl\x18\x01 \x01(\t\x12\x11\n\tchannelId\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x03 \x01(\t\x12\x18\n\x10\x63onfigurationUrl\x18\x04 \x01(\t\"$\n\x0eMSTeamsChannel\x12\x12\n\nwebhookUrl\x18\x01 \x01(\tBY\n\x19\x63loud.alphaus.blueapi.apiB\x14\x41piNotificationProtoZ&github.com/alphauslabs/blue-sdk-go/apib\x06proto3')



_NOTIFICATIONSETTINGS = DESCRIPTOR.message_types_by_name['NotificationSettings']
_NOTIFICATIONCHANNEL = DESCRIPTOR.message_types_by_name['NotificationChannel']
_EMAILCHANNEL = DESCRIPTOR.message_types_by_name['EmailChannel']
_SLACKCHANNEL = DESCRIPTOR.message_types_by_name['SlackChannel']
_MSTEAMSCHANNEL = DESCRIPTOR.message_types_by_name['MSTeamsChannel']
NotificationSettings = _reflection.GeneratedProtocolMessageType('NotificationSettings', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFICATIONSETTINGS,
  '__module__' : 'api.notification_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.api.NotificationSettings)
  })
_sym_db.RegisterMessage(NotificationSettings)

NotificationChannel = _reflection.GeneratedProtocolMessageType('NotificationChannel', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFICATIONCHANNEL,
  '__module__' : 'api.notification_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.api.NotificationChannel)
  })
_sym_db.RegisterMessage(NotificationChannel)

EmailChannel = _reflection.GeneratedProtocolMessageType('EmailChannel', (_message.Message,), {
  'DESCRIPTOR' : _EMAILCHANNEL,
  '__module__' : 'api.notification_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.api.EmailChannel)
  })
_sym_db.RegisterMessage(EmailChannel)

SlackChannel = _reflection.GeneratedProtocolMessageType('SlackChannel', (_message.Message,), {
  'DESCRIPTOR' : _SLACKCHANNEL,
  '__module__' : 'api.notification_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.api.SlackChannel)
  })
_sym_db.RegisterMessage(SlackChannel)

MSTeamsChannel = _reflection.GeneratedProtocolMessageType('MSTeamsChannel', (_message.Message,), {
  'DESCRIPTOR' : _MSTEAMSCHANNEL,
  '__module__' : 'api.notification_pb2'
  # @@protoc_insertion_point(class_scope:blueapi.api.MSTeamsChannel)
  })
_sym_db.RegisterMessage(MSTeamsChannel)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031cloud.alphaus.blueapi.apiB\024ApiNotificationProtoZ&github.com/alphauslabs/blue-sdk-go/api'
  _NOTIFICATIONSETTINGS._serialized_start=39
  _NOTIFICATIONSETTINGS._serialized_end=102
  _NOTIFICATIONCHANNEL._serialized_start=105
  _NOTIFICATIONCHANNEL._serialized_end=313
  _EMAILCHANNEL._serialized_start=315
  _EMAILCHANNEL._serialized_end=365
  _SLACKCHANNEL._serialized_start=367
  _SLACKCHANNEL._serialized_end=463
  _MSTEAMSCHANNEL._serialized_start=465
  _MSTEAMSCHANNEL._serialized_end=501
# @@protoc_insertion_point(module_scope)
